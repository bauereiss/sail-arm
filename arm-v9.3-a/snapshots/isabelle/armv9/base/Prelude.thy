chapter \<open>Generated by Lem from \<open>lem/prelude.lem\<close>.\<close>

theory "Prelude" 

imports
  Main
  "LEM.Lem_pervasives_extra"
  "Sail.Sail2_instr_kinds"
  "Sail.Sail2_values"
  "Sail.Sail2_operators_mwords"
  "Sail.Sail2_concurrency_interface"
  "Sail.Sail2_monadic_combinators"

begin 

\<comment> \<open>\<open>open import Pervasives_extra\<close>\<close>
\<comment> \<open>\<open>open import Sail2_instr_kinds\<close>\<close>
\<comment> \<open>\<open>open import Sail2_values\<close>\<close>
\<comment> \<open>\<open>open import Sail2_operators_mwords\<close>\<close>
\<comment> \<open>\<open>open import Sail2_concurrency_interface\<close>\<close>
\<comment> \<open>\<open>open import Sail2_monadic_combinators\<close>\<close>

\<comment> \<open>\<open>val __ReadMemory : forall 'rv 'n 'e. Size 'n => integer -> mword ty56 -> monad 'rv (mword 'n) 'e
let __ReadMemory n addr = read_mem Read_plain (56:integer) addr n
val __WriteMemory : forall 'rv 'n 'e. Size 'n => integer -> mword ty56 -> mword 'n -> monad 'rv unit 'e
let __WriteMemory n addr data = write_mem Write_plain (56:integer) addr n data >>= fun _ -> return ()\<close>\<close>

\<comment> \<open>\<open> TODO \<close>\<close>
\<comment> \<open>\<open>val putchar : integer -> unit\<close>\<close>
definition putchar0  :: \<open> int \<Rightarrow> unit \<close>  where 
     \<open> putchar0 _ = ( ()  )\<close>


\<comment> \<open>\<open>val wakeup_request : forall 'abort 'barrier 'cache_op 'fault 'pa 'tlb_op 'translation_summary 'arch_ak 'rv 'e.
  unit -> monad 'abort 'barrier 'cache_op 'fault 'pa 'tlb_op 'translation_summary 'arch_ak 'rv unit 'e\<close>\<close>
definition wakeup_request  :: \<open> unit \<Rightarrow>('abort,'barrier,'cache_op,'fault,'pa,'tlb_op,'translation_summary,'arch_ak,'rv,(unit),'e)monad \<close>  where 
     \<open> wakeup_request _ = ( return ()  )\<close>


\<comment> \<open>\<open>val sleep_request : forall 'abort 'barrier 'cache_op 'fault 'pa 'tlb_op 'translation_summary 'arch_ak 'rv 'e.
  unit -> monad 'abort 'barrier 'cache_op 'fault 'pa 'tlb_op 'translation_summary 'arch_ak 'rv unit 'e\<close>\<close>
definition sleep_request  :: \<open> unit \<Rightarrow>('abort,'barrier,'cache_op,'fault,'pa,'tlb_op,'translation_summary,'arch_ak,'rv,(unit),'e)monad \<close>  where 
     \<open> sleep_request _ = ( return ()  )\<close>


\<comment> \<open>\<open>type ty288\<close>\<close>
\<comment> \<open>\<open>type ty320\<close>\<close>
\<comment> \<open>\<open>type ty352\<close>\<close>
\<comment> \<open>\<open>type ty384\<close>\<close>
\<comment> \<open>\<open>type ty416\<close>\<close>
\<comment> \<open>\<open>type ty448\<close>\<close>
\<comment> \<open>\<open>type ty480\<close>\<close>
\<comment> \<open>\<open>type ty512\<close>\<close>
\<comment> \<open>\<open>type ty640\<close>\<close>
\<comment> \<open>\<open>type ty768\<close>\<close>
\<comment> \<open>\<open>type ty896\<close>\<close>
\<comment> \<open>\<open>type ty1024\<close>\<close>
\<comment> \<open>\<open>type ty1152\<close>\<close>
\<comment> \<open>\<open>type ty1280\<close>\<close>
\<comment> \<open>\<open>type ty1408\<close>\<close>
\<comment> \<open>\<open>type ty1536\<close>\<close>
\<comment> \<open>\<open>type ty1664\<close>\<close>
\<comment> \<open>\<open>type ty1792\<close>\<close>
\<comment> \<open>\<open>type ty1920\<close>\<close>
\<comment> \<open>\<open>type ty2048\<close>\<close>
\<comment> \<open>\<open>type ty2304\<close>\<close>
\<comment> \<open>\<open>type ty2560\<close>\<close>
\<comment> \<open>\<open>type ty2816\<close>\<close>
\<comment> \<open>\<open>type ty3072\<close>\<close>
\<comment> \<open>\<open>type ty3328\<close>\<close>
\<comment> \<open>\<open>type ty3584\<close>\<close>
\<comment> \<open>\<open>type ty3840\<close>\<close>
\<comment> \<open>\<open>type ty4096\<close>\<close>
\<comment> \<open>\<open>type ty4608\<close>\<close>
\<comment> \<open>\<open>type ty6400\<close>\<close>
\<comment> \<open>\<open>type ty8192\<close>\<close>
\<comment> \<open>\<open>type ty9216\<close>\<close>
\<comment> \<open>\<open>type ty12800\<close>\<close>

\<comment> \<open>\<open>type ty12544\<close>\<close>

\<comment> \<open>\<open>type ty16384\<close>\<close>

\<comment> \<open>\<open>type ty18432\<close>\<close>

\<comment> \<open>\<open>type ty20736\<close>\<close>

\<comment> \<open>\<open>type ty25088\<close>\<close>

\<comment> \<open>\<open>type ty25600\<close>\<close>

\<comment> \<open>\<open>type ty30976\<close>\<close>

\<comment> \<open>\<open>type ty32768\<close>\<close>

\<comment> \<open>\<open>type ty36864\<close>\<close>

\<comment> \<open>\<open>type ty41472\<close>\<close>

\<comment> \<open>\<open>type ty43264\<close>\<close>

\<comment> \<open>\<open>type ty50176\<close>\<close>

\<comment> \<open>\<open>type ty51200\<close>\<close>

\<comment> \<open>\<open>type ty57600\<close>\<close>

\<comment> \<open>\<open>type ty61952\<close>\<close>

\<comment> \<open>\<open>type ty65536\<close>\<close>

\<comment> \<open>\<open>type ty73728\<close>\<close>

\<comment> \<open>\<open>type ty86528\<close>\<close>

\<comment> \<open>\<open>type ty100352\<close>\<close>

\<comment> \<open>\<open>type ty115200\<close>\<close>

\<comment> \<open>\<open>type ty131072\<close>\<close>
end
